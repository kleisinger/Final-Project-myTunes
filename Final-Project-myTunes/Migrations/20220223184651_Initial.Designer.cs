// <auto-generated />
using System;
using Final_Project_myTunes.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Final_Project_myTunes.Migrations
{
    [DbContext(typeof(myTunesContext))]
    [Migration("20220223184651_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Final_Project_myTunes.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Artist", (string)null);
                });

            modelBuilder.Entity("Final_Project_myTunes.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateOfPurchase")
                        .HasColumnType("date");

                    b.Property<int?>("SongId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<double?>("UserRating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.HasIndex("UserId");

                    b.ToTable("Purchase", (string)null);
                });

            modelBuilder.Entity("Final_Project_myTunes.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ArtistId")
                        .HasColumnType("int");

                    b.Property<double?>("AverageRating")
                        .HasColumnType("float");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("smallmoney");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Song", (string)null);
                });

            modelBuilder.Entity("Final_Project_myTunes.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("WalletBalance")
                        .HasColumnType("smallmoney");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Final_Project_myTunes.Models.Purchase", b =>
                {
                    b.HasOne("Final_Project_myTunes.Models.Song", "Song")
                        .WithMany("Purchases")
                        .HasForeignKey("SongId")
                        .HasConstraintName("FK_Purchase_Song");

                    b.HasOne("Final_Project_myTunes.Models.User", "User")
                        .WithMany("Purchases")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Purchase_User");

                    b.Navigation("Song");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Final_Project_myTunes.Models.Song", b =>
                {
                    b.HasOne("Final_Project_myTunes.Models.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistId")
                        .HasConstraintName("FK_Song_Artist");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("Final_Project_myTunes.Models.Artist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Final_Project_myTunes.Models.Song", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("Final_Project_myTunes.Models.User", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
